# Project-wide Gradle settings.
# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.
# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html
#Enable daemon
org.gradle.daemon=true
# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
# Default value: -Xmx10248m -XX:MaxPermSize=256m
org.gradle.jvmargs=-Xmx3072m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8

# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
# org.gradle.parallel=true

# Kotlin code style for this project: "official" or "obsolete":
kotlin.code.style=official

# Enable configure on demand.
org.gradle.configureondemand=true
# Android Studio 2.2+
android.enableBuildCache=true

# Kotlin
kotlin.incremental=true

# R8 is available with Android Studio 3.3 beta and works with Proguard rules.
# R8 does all of shrinking, desugaring and dexing in one step. When comparing to the current code shrinking solution,
# Proguard, R8 shrinks the code faster while improving the output size.
android.enableR8=true

# Better debug info when using obsolete API: When the plugin detects that you're using an API that's no longer
# supported, it can now provide more-detailed information to help you determine where that API is being used.
android.debug.obsoleteApi=true